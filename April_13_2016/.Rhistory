#Load in ggplot2 for making graphs#
library(ggplot2)#
#
#If needed, install.packages("ggrepel")#
#Load in ggrepel, for making labels on your ggplots#
library(ggrepel)#
#
#If needed, install.packages("ggdendro")#
#Load in ggdendro, for making nice dendrograms out of your hierarchical clustering results#
library(ggdendro)#
#
#If needed, install.packages("ape")#
#Load in ape, for making nice dendrograms out of your hierarchical clustering results#
library(ape)
#Let's read in the dataset for the nutrition labels for our 75 candy types to learn how to do Principal Component Analysis (PCA) in R#
data <- read.table("./candy_nutrition.txt", header=TRUE)
names(data)
data$total_fat_per_serv <- data$total_fat_g/data$serving_size_g#
data$saturated_fat_per_serv <- data$saturated_fat_g/data$serving_size_g#
data$cholesterol_per_serv <- data$cholesterol_mg/data$serving_size_g#
data$sodium_per_serv <- data$sodium_mg/data$serving_size_g#
data$total_carb_per_serv <- data$total_carb_g/data$serving_size_g#
data$dietary_fiber_per_serv <- data$dietary_fiber_g/data$serving_size_g#
data$sugars_per_serv <- data$sugars_g/data$serving_size_g#
data$protein_per_serv <- data$protein_g/data$serving_size_g
names(data)
pca <- prcomp(data[17:24], center=TRUE, scale.=TRUE)
?prcomp
pca <- prcomp(data[17:24], center=TRUE, scale.=TRUE)
summary(pca)
pca$rotation
scores <- as.data.frame(pca$x)
head(scores)
pca_scores <- cbind(data, scores)
head(pca_scores)
p <- ggplot(pca_scores, aes(PC1, PC2, colour=class))#
p + geom_point(size=5, alpha=0.6) + geom_text(data=pca_scores, aes(x=PC1, y=PC2, label=name)) + scale_colour_brewer(type="qual", palette=2)
p <- ggplot(pca_scores, aes(PC1, PC2, colour=class))#
p + geom_point(size=5, alpha=0.6) + geom_text_repel(data=pca_scores, aes(x=PC1, y=PC2, label=name)) + scale_colour_brewer(type="qual", palette=2)
p <- ggplot(pca_scores, aes(PC3, PC4, colour=class))#
p + geom_point(size=5, alpha=0.6) + geom_text_repel(data=pca_scores, aes(x=PC3, y=PC4, label=name)) + scale_colour_brewer(type="qual", palette=2)
scaled_nutrition <- scale(data[17:24])
scaled_nutrition
scaled_candies <- t(scaled_nutrition)
scaled_candies
scaled_candies <- scale(t(scaled_nutrition))
colnames(scaled_candies) <- as.matrix(data[2])
head(scaled_nutrition)
head(scaled_candies)
corell_nutrition <- cor(scaled_nutrition, method="spearman")#
corell_candies <- cor(scaled_candies, method="spearman")
head(corell_nutrition)
head(corell_candies)
?as.dist
dist_nutrition <- as.dist(1-abs(corell_nutrition))#
dist_candies <- as.dist(1-abs(corell_candies))
dist_candies
?hclust
hc_nutrition <- hclust(dist_nutrition, method="ward.D2")#
hc_candies <- hclust(dist_candies, method="ward.D2")
plot(hc_nutrition, cex=0.8)
plot(hc_candies, cex=0.8)
plot(as.phylo(hc_nutrition), type="cladogram", label.offset=0.01)
plot(as.phylo(hc_candies), type="cladogram", label.offset=0.01, cex=0.5)
shape_desc <- read.table("./shape_descriptors.txt", header=TRUE)#
names(shape_desc)#
head(shape_desc)
p <- ggplot(shape_desc, aes(x=cm2))#
p + geom_histogram()
shape_desc$sqrt_cm2 <- sqrt(shape_desc$cm2)
p <- ggplot(shape_desc, aes(x=sqrt_cm2))#
p + geom_histogram()
p <- ggplot(shape_desc, aes(x=circ, y=ar, size=sqrt_cm2))#
p + geom_point(alpha=0.2)
p <- ggplot(shape_desc, aes(x=circ^2, y=log(ar), size=sqrt_cm2))#
p + geom_point(alpha=0.2)
all.x=TRUE
summary(mdata)
mdata <- merge(x=shape_desc, y=data, by.x="id", by.y="id", all.x=TRUE)#
summary(mdata)
nonas_mdata <- na.omit(mdata)
summary(nonas_mdata)
p <- ggplot(nonas_mdata, aes(x=circ^2, y=log(ar), size=sqrt_cm2, colour=class))#
p + geom_point(alpha=0.5) + scale_colour_brewer(type="qual", palette=2) + theme_bw() + ggtitle(label="log(Aspect Ratio) vs. Circularity^2, \nwith size = sqrt(cm^2) and colored by candy class")
averaged <- aggregate(nonas_mdata[c(4:10,11,13,14:33)], by=list(nonas_mdata$name, nonas_mdata$class), FUN=mean)
p <- ggplot(averaged, aes(x=circ^2, y=log(ar), colour=Group.2))#
p + geom_point(alpha=1, size=4) + scale_colour_brewer(type="qual", palette=2) + geom_text_repel(data=averaged, aes(x=circ^2, y=log(ar), label=Group.1)) + scale_colour_brewer(type="qual", palette=2, guide=guide_legend(title="class")) + theme_bw() + ggtitle(label="Averaged log(Aspect Ratio) vs. Circularity^2, \nlabeled by candy type and colored by candy class")
sample_colors <- read.table("./sample_colors.txt", header=TRUE)#
#
p <- ggplot(sample_colors, aes(x,y, colour=rgb(r,g,b, maxColorValue=255)))#
p + geom_point(size=46) + scale_colour_identity()
